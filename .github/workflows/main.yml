name: Run PowerShell Script

on:
  push:
    branches:
      - main

jobs:
  run-powershell-script:
    runs-on: windows-latest
    steps:
    - name: Azure PowerShell Action
      uses: Azure/powershell@v1
      with:
        inlineScript: |
          Write-Host "Release Name: ${{ github.event.release.name }}, jobname: $env:GITHUB_JOB and RunId: $env:GITHUB_RUN_ID, Attemps: $env:GITHUB_RUN_ATTEMPT"         
          # $LogFileName = "${{ secrets.CustomerName }}" + "_" + "${{ github.workflow }}" + "_" +  $env:GITHUB_RUN_NUMBER + "_" + $env:GITHUB_RUN_ATTEMPT
          $LogFileName = "${{ vars.CustomerId }}" + "_" + "${{ github.workflow }}" + "_" +  $env:GITHUB_RUN_NUMBER + "_" + $env:GITHUB_RUN_ATTEMPT
          $folderPath = "$Home\" + "Logs"
          New-Item -ItemType Directory -Path $folderPath
          $LogFilepath = $folderPath + "\" + $LogFileName + ".txt"
          echo "LogFileName=$LogFileName" >> $Env:GITHUB_ENV 
          # echo "LogFolderPath=$folderPath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "LogFolderPath=$folderPath" >> $Env:GITHUB_ENV 
          Start-Transcript -Path $LogFilepath -Append -IncludeInvocationHeader -NoClobber
          Write-Host "folderpath= ${{env.LogFolderPath}}"
          Write-Host "test the transcript logic."
          Get-Content -Path $LogFilepath
          Get-Content -Path
          # Stop-Transcript
        azPSVersion: "latest"
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: ${{env.LogFileName}}
        path: ${{env.LogFolderPath}}
